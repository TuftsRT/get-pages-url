name: get-pages-url
author: Tufts University
description: get the GitHub Pages URL for a repository
branding:
  icon: link
  color: blue

inputs:
  repository:
    description: |
      Repository for which to get the GitHub Pages URL.
      Must be in `owner/repo` format. Defaults to the current repository.
    required: false
    default: ${{ github.repository }}
  token:
    description: |
      GitHub token with `read` permissions for the `pages` scope.
      Defaults to the `GITHUB_TOKEN` secret of the current repository.
    required: false
    default: ${{ github.token }}

outputs:
  url:
    description: The GitHub Pages URL for the repository.
    value: ${{ steps.set-output.outputs.url }}

runs:
  using: composite
  steps:
    - id: attempt-api-request
      run: |
        url=$(gh api "repos/${{ inputs.repository }}/pages" --jq ".html_url")
        echo "url=${url}" >> "$GITHUB_OUTPUT"
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
      continue-on-error: true
    - id: construct-default-url
      if: ${{ steps.attempt-api-request.outcome == 'failure' }}
      run: |
        owner=$(echo "${{ inputs.repository }}" | cut -d "/" -f 1)
        repo=$(echo "${{ inputs.repository }}" | cut -d "/" -f 2)
        if [ "${repo}" == "${owner}.github.io" ]; then
          url="https://${repo}/"
        else
          url="https://${owner}.github.io/${repo}/"
        fi
        echo "url=${url}" >> "$GITHUB_OUTPUT"
      shell: bash
    - id: set-output
      run: |
        if [ -z "${API_OUT}" ]; then
          echo "url=${BAK_OUT}" >> "$GITHUB_OUTPUT"
        else
          echo "url=${API_OUT}" >> "$GITHUB_OUTPUT"
        fi
      shell: bash
      env:
        API_OUT: ${{ steps.attempt-api-request.outputs.url }}
        BAK_OUT: ${{ steps.construct-default-url.outputs.url }}
